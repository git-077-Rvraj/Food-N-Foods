{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rv raj\\\\Desktop\\\\Web Dev\\\\Foody\\\\src\\\\components\\\\Store\\\\Cart-Provider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultcartState = {\n  items: [],\n  totalAmount: 0\n};\n\nfunction cartReducer(state, action) {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItem;\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    } // const updatedItems = state.items.concat(action.item);\n\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultcartState;\n}\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultcartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemToCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartProvider, \"SxdyLGZ5uKDgYcj6eKNk3HR0yXI=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Rv raj/Desktop/Web Dev/Foody/src/components/Store/Cart-Provider.js"],"names":["useReducer","CartContext","defaultcartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItem","updatedItems","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemToCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAE;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,WAAW,EAAC;AAFQ,CAAxB;;AAKA,SAASC,WAAT,CAAqBC,KAArB,EAA2BC,MAA3B,EAAkC;AAC9B,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AACrB,UAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E;AAEA,UAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAsBJ,IAAI,IAAIA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EAAtD,CAA9B;AAEA,UAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAN,CAAYU,qBAAZ,CAAzB;AAEA,QAAII,WAAJ;AACA,QAAIC,YAAJ;;AAEA,QAAGF,gBAAH,EAAoB;AAChB,YAAMC,WAAW,GAAG,EAChB,GAAGD,gBADa;AAEhBJ,QAAAA,MAAM,EAAEI,gBAAgB,CAACJ,MAAjB,GAAyBL,MAAM,CAACG,IAAP,CAAYE;AAF7B,OAApB;AAIAM,MAAAA,YAAY,GAAG,CAAC,GAAGZ,KAAK,CAACH,KAAV,CAAf;AACAe,MAAAA,YAAY,CAACL,qBAAD,CAAZ,GAAsCI,WAAtC;AACH,KAPD,MAQI;AACAC,MAAAA,YAAY,GAAGZ,KAAK,CAACH,KAAN,CAAYgB,MAAZ,CAAmBZ,MAAM,CAACG,IAA1B,CAAf;AACH,KApBoB,CAsBrB;;;AACA,WAAM;AACFP,MAAAA,KAAK,EAACe,YADJ;AAEFd,MAAAA,WAAW,EAACK;AAFV,KAAN;AAIH;;AACD,SAAOP,gBAAP;AACH;;AAGD,SAASkB,YAAT,CAAsBC,KAAtB,EAA4B;AAAA;;AAExB,QAAK,CAACC,SAAD,EAAYC,kBAAZ,IAAkCvB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAjD;;AAEA,QAAMsB,oBAAoB,GAAId,IAAD,IAAS;AAClCa,IAAAA,kBAAkB,CAAC;AAACf,MAAAA,IAAI,EAAE,KAAP;AAAcE,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMe,uBAAuB,GAAIV,EAAD,IAAO;AACnCQ,IAAAA,kBAAkB,CAAC;AAACf,MAAAA,IAAI,EAAE,QAAP;AAAiBO,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAlB;AAEH,GAHD;;AAKA,QAAMW,WAAW,GAAG;AAChBvB,IAAAA,KAAK,EAACmB,SAAS,CAACnB,KADA;AAEhBC,IAAAA,WAAW,EAAEkB,SAAS,CAAClB,WAFP;AAGhBuB,IAAAA,OAAO,EAAEH,oBAHO;AAIhBI,IAAAA,UAAU,EAAEH;AAJI,GAApB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACKL,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAzBQT,Y;;KAAAA,Y;AA2BT,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react';\r\n\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultcartState ={\r\n    items: [],\r\n    totalAmount:0\r\n};\r\n\r\nfunction cartReducer(state,action){\r\n    if(action.type === 'ADD'){\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\r\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\r\n\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n        let updatedItem;\r\n        let updatedItems;\r\n\r\n        if(existingCartItem){\r\n            const updatedItem = {\r\n                ...existingCartItem,\r\n                amount: existingCartItem.amount +action.item.amount\r\n            }\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        }\r\n        else{\r\n            updatedItems = state.items.concat(action.item);\r\n        }\r\n\r\n        // const updatedItems = state.items.concat(action.item);\r\n        return{ \r\n            items:updatedItems,\r\n            totalAmount:updatedTotalAmount\r\n        };\r\n    }\r\n    return defaultcartState;\r\n}\r\n\r\n\r\nfunction CartProvider(props){\r\n\r\n    const[cartState, dispatchCartAction] = useReducer(cartReducer, defaultcartState);\r\n\r\n    const addItemToCartHandler = (item) =>{\r\n        dispatchCartAction({type: 'ADD', item: item});\r\n    };\r\n    const removeItemToCartHandler = (id) =>{\r\n        dispatchCartAction({type: 'REMOVE', id: id});\r\n\r\n    };\r\n\r\n    const cartContext = {\r\n        items:cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemToCartHandler\r\n    };\r\n\r\n    return(\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    );\r\n\r\n}\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}