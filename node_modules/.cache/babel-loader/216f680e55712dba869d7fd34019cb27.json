{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rv raj\\\\Desktop\\\\Web Dev\\\\Foody\\\\src\\\\components\\\\Store\\\\Cart-Provider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultcartState = {\n  items: [],\n  totalAmount: 0\n};\n\nfunction cartReducer(state, action) {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultcartState;\n}\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultcartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemToCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartProvider, \"SxdyLGZ5uKDgYcj6eKNk3HR0yXI=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Rv raj/Desktop/Web Dev/Foody/src/components/Store/Cart-Provider.js"],"names":["useReducer","CartContext","defaultcartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemToCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAE;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,WAAW,EAAC;AAFQ,CAAxB;;AAKA,SAASC,WAAT,CAAqBC,KAArB,EAA2BC,MAA3B,EAAkC;AAC9B,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AACrB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBC,IAAnB,CAArB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAA/E;AACA,WAAM;AACFX,MAAAA,KAAK,EAACM,YADJ;AAEFL,MAAAA,WAAW,EAACQ;AAFV,KAAN;AAIH;;AACD,SAAOV,gBAAP;AACH;;AAGD,SAASa,YAAT,CAAsBC,KAAtB,EAA4B;AAAA;;AAExB,QAAK,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAjD;;AAEA,QAAMiB,oBAAoB,GAAIR,IAAD,IAAS;AAClCO,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAE,KAAP;AAAcG,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMS,uBAAuB,GAAIC,EAAD,IAAO;AACnCH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAE,QAAP;AAAiBa,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAlB;AAEH,GAHD;;AAKA,QAAMC,WAAW,GAAG;AAChBnB,IAAAA,KAAK,EAACc,SAAS,CAACd,KADA;AAEhBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFP;AAGhBmB,IAAAA,OAAO,EAAEJ,oBAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAzBQV,Y;;KAAAA,Y;AA2BT,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react';\r\n\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultcartState ={\r\n    items: [],\r\n    totalAmount:0\r\n};\r\n\r\nfunction cartReducer(state,action){\r\n    if(action.type === 'ADD'){\r\n        const updatedItems = state.items.concat(item);\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n        return{ \r\n            items:updatedItems,\r\n            totalAmount:updatedTotalAmount\r\n        };\r\n    }\r\n    return defaultcartState;\r\n}\r\n\r\n\r\nfunction CartProvider(props){\r\n\r\n    const[cartState, dispatchCartAction] = useReducer(cartReducer, defaultcartState);\r\n\r\n    const addItemToCartHandler = (item) =>{\r\n        dispatchCartAction({type: 'ADD', item: item});\r\n    };\r\n    const removeItemToCartHandler = (id) =>{\r\n        dispatchCartAction({type: 'REMOVE', id: id});\r\n\r\n    };\r\n\r\n    const cartContext = {\r\n        items:cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemToCartHandler\r\n    };\r\n\r\n    return(\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    );\r\n\r\n}\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}